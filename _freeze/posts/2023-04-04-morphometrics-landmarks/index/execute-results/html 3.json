{
  "hash": "f5fe11253471ef1e7dde7be2a62389c3",
  "result": {
    "markdown": "---\ntitle: \"Intro to Geometric Morphometrics\"\nauthor:\n  - name: Marguerite Butler\n    url: https://butlerlab.org\n    affiliation: School of Life Sciences, University of Hawaii\n    affiliation_url: https://manoa.hawaii.edu/lifesciences/\ndescription: \"Getting started with morphometrics\"\ndate: 2023-04-04\ncategories: [module 6, week 12, control structures, if else, (do) while, programming]\nbibliography: refs.bib\n---\n\n\n### Acknowledgements\n\nReferences for this Material:\n\n- Bardua et al (2019) A Practical Guide to Sliding and Surface Semilandmarks in Morphometric Analyses<https://academic.oup.com/iob/article/1/1/obz016/5526881>\n- [Emma Sherratʻs quick guide to Geomorph](https://www.researchgate.net/profile/Alexandre-Palaoro/post/Geomorph-Package-in-R/attachment/5cffb777cfe4a7968da98557/AS%3A768610867900420%401560262519604/download/Quick_Guide_to_Geomorph-3.0.pdf)\n\n# Learning objectives\n\n::: callout-note\n# Learning objectives\n\n**At the end of this lesson you will:**\n\n-   Be able to collect landmark data\n-   Understand the terminology for landmark data\n\n:::\n\n### Preparation\n\nPackages:  \n__geomorph__   \n__rgl__    \n__Matrix__  \nPlease install if you donʻt have them. `install.packages(c(\"geomorph\",\"rgl\",\"Matrix\"), dependencies=T)`\n\nMac Users: Please also install Xquartz <https://www.xquartz.org>, a windowing system for `rgl`. \n\nFiles:  \n`red-fox-mandible-lateral.jpg`  Please [download](../../images/red-fox-mandible-lateral.jpg) into your folder for this exercise. \n[Source: Jim Russell](https://russellboneatlas.wordpress.com/home/red-fox-bone-atlas/red-fox-mandible/)\n\n# Overview\n\n__Traditional morphometrics__ uses linear measurements such as body length, hind limb length, etc. to characterize morphological variation. This works well for many questions, especially ones that relate to lever mechanics, such as locomotion or bite force, etc. but does not capture 3D variation well such as the geometric shape of a skull or the details of seed shape.  \n\n__Geometric morphometrics__ aims to characterize more complex shapes by the use of __landmarks__, locations on the specimens determined by the researcher to reveal key insights or capture the full range of variation. \n\n\nIn order to do this, we still need methods to characterize __size__ vs. __shape__. For geometric morphometrics that is typically __Procrustes superposition__. Some other differences also involve the data. Whereas one can typically take linear measurements directly on the specimen (with calipers or a ruler), collecting landmark data usually involves some image capture. \n\n# Capturing images\n\nThe most important thing is consistency and a protocol that minimizes error. While the specific protocol will vary by the type of object and technology (cameras, uCT, etc.), some general principles are :\n\n- Specimen Layout \n  + Be as __consistent__ as possible in the preparation of specimens and their arrangement\n  + Place every specimen on the same side. (Capture the same aspect of each specimen)\n  + Same pose or posture\n  + Mouths open? Closed?\n  + Fins or dewlaps exposed to show shape and articulatio, etc. \n- Size and Metadata\n  - Include a size standard (e.g., a ruler), ideally the same item, with X-Y information\n  - Include the specimen ID in the photo itself (written on a card, etc.) \n- Camera\n  - Camera in same position and same angle, preferably with a tripod\n  - Use the same camera and lens (or zoom, etc.)\n  - Make several backups (multiple flash cards, save to computer, etc.)\n  - Specimen perpendicular to camera (check level)\n  - Same lighting\n  - Take several photos as backup\n- Data Management\n  - Keep a notebook (written log) of the specimens being photographed, in order\n  - Transfer files to raw data folder for photos (in same format and same order)\n  - Name files with metadata in filenames for each specimen, save in another folder \n  - You should have Raw_Photos, Named_Photos folders.  \n\nErrors and distortions can be fixed with software, but it is much easier to minimize them at the start. \n\n# Landmarks and Pseudolandmarks\n\nEssential features of good landmarks:\n\nChoose landmarks that are:  \n\n-  Present on all specimens  \n-  Relevant to the question  \n-  Clearly defined (to be repeatable)  \n-  Conform to accepted best practices for your type of study (do a literature search)  \n\nHere is an example of typical landmarks:\n\n![Rodent lower jaw (mandible). Lateral view of a _Nectomys squamipes_ mandible, showing the 10 landmarks used in this work. 1) Anterior edge of the incisive alveolus; 2) Most posterior point of the diastema; 3) Junction between the mandible and the m1 root; 4) Junction between the molar base and the coronoid process; 5) Most posterior point at the articular process; 6) Most anterior point in the angular notch; 7) Most posterior point at the angular process; 8) Angular process base; 9) Inner edge of the mandibular symphysis; 10) Posterior edge of the incisive alveolus](../../images/rodentmandible.jpg)\n[Source](https://onlinelibrary.wiley.com/doi/full/10.1002/ece3.7557)\n\nAcquiring landmarks usually involves some digitizing by hand (with computer assistance). For 2D landmark data:\n\n-  Read in the image file  \n-  Set the scale (translation between pixels and known distance)  \n-  Digitize landmarks, collecting X-Y coordinate data \n\nEasy-to use software for this purpose include `ImageJ` and `FIJI`, as well as the `geomorph` package in R.  Before doing a large project, I would try them all to see which serves your purpose the best. \n\nFor `geomorph`, Emma Sherratʻs [Emma Sherratʻs quick guide to Geomorph](https://www.researchgate.net/profile/Alexandre-Palaoro/post/Geomorph-Package-in-R/attachment/5cffb777cfe4a7968da98557/AS%3A768610867900420%401560262519604/download/Quick_Guide_to_Geomorph-3.0.pdf) provides an excellent walk-through in Chapter 15.  \n\nFor a quick example, letʻs do a 2D landmark collection on the Red Fox Mandible using `digitize2d()`. \n\nThe syntax is:\n\n`digitize2d(filelist, nlandmarks, scale = NULL, tpsfile, verbose = TRUE)`\n\nWhere:\n\n`filelist` : vector of filenames.  \n`nlandmarks` : number of landmarks to digitize\n`scale`  : length of scale to use (optional)\n`tpsfile` : name of output file to create or read (to edit)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrequire(geomorph)\n\nfiles <- c(\"red-fox-mandible-lateral.jpg\")\n# files <- list.files(pattern = \"*.jpg\") # for multiple files in your image directory\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndigitize2d( files, \n            nlandmarks=10, \n            scale=80, \n            tpsfile = \"mandible-lat.tps\", \n            verbose = TRUE) \n```\n:::\n\n\nIn verbose mode, it will ask you to confirm each landmark (this can be turned off). If a landmark is missing, choose `a` for absent. Make a mistake and choose `n` - it will ask you to redigitize it. \n\nThe output will be sent to the tps file:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat <- readland.tps(\"mandible-lat.tps\", specID = \"ID\", readcurves = FALSE, warnmsg = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nNo curves detected; all points appear to be fixed landmarks.\n```\n:::\n\n```{.r .cell-code}\ndat\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n, , ../../images/red-fox-mandible-lateral.jpg\n\n           [,1]      [,2]\n [1,] 107.29125 109.47242\n [2,] 103.69036 108.94577\n [3,] 101.66872 108.37825\n [4,]  43.63469 105.62467\n [5,]  10.59532 111.73118\n [6,]  16.56440 102.17078\n [7,]  12.09659  98.37737\n [8,]  34.05770  93.06904\n [9,]  66.20128  89.99578\n[10,] 113.50334 107.91870\n```\n:::\n:::\n\n\nFor another example, check out the `plethodon` data included with `geomorph`\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(plethodon)\nattributes(plethodon)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$names\n[1] \"land\"    \"links\"   \"species\" \"site\"    \"outline\"\n```\n:::\n\n```{.r .cell-code}\nstr(plethodon)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nList of 5\n $ land   : num [1:12, 1:2, 1:40] 8.89 9.27 5.56 1.87 1.28 ...\n  ..- attr(*, \"dimnames\")=List of 3\n  .. ..$ : NULL\n  .. ..$ : NULL\n  .. ..$ : NULL\n $ links  : num [1:14, 1:2] 4 3 2 1 1 6 7 8 9 10 ...\n $ species: Factor w/ 2 levels \"Jord\",\"Teyah\": 1 1 1 1 1 1 1 1 1 1 ...\n $ site   : Factor w/ 2 levels \"Allo\",\"Symp\": 2 2 2 2 2 2 2 2 2 2 ...\n $ outline: num [1:3631, 1:2] 0.399 0.4 0.401 0.403 0.404 ...\n```\n:::\n:::\n\n\n3D coordinates in tps format contain 3D arrays (one table per specimen). \n\n![](../../geomorphdataarrays.png)\n[Source: Emma Sherratʻs quick guide to Geomorph](https://www.researchgate.net/profile/Alexandre-Palaoro/post/Geomorph-Package-in-R/attachment/5cffb777cfe4a7968da98557/AS%3A768610867900420%401560262519604/download/Quick_Guide_to_Geomorph-3.0.pdf)\n\n# Semi-Landmarks\n\nOftentimes, there is more shape variation than distinct landmarks. For example, there is no distinct landmark that you can reliable digitize on the curve of a shell, for example. In this case, semi-landmarks can be helpful. \n\n__Semi-landmarks__ are regularly spaced points between two landmarks or along a curve or a surface.   \n  __Sliding semi-landmarks__ are spaced linearly along a curve.  \n  __Surface semi-landmarks__ are spread out evenly in 3D along a surface. \n\nNOTE: One thing to note is that any error in the landmarks will also be propagated to the semilandmarks. \n\n![Figure: Landmark and semilandmark data displayed on the caecilian Siphonops annulatus BMNH 1956.1.15.88. Points are colored as follows: landmarks (red), sliding semilandmarks (“curve points,” yellow), and surface semilandmarks (“surface points,” blue). For information regarding each cranial region, see Bardua et al. (2019). BMNH, Natural History Museum, London, UK.](../../images/caecelian_skull_semilandmarks.jpeg)\n\n[Source: Bardua et al 2019](https://academic.oup.com/iob/article/1/1/obz016/5526881)\n\nAnnotated 3D version of this figure available at: <https://sketchfab.com/3d-models/add35e2e8af94839b1f577bfcee32e54>\n\nLetʻs practice digitizing 3D landmarks with the geomorph vignette: <https://cran.r-project.org/web/packages/geomorph/vignettes/geomorph.digitize3D.html>\n\n\n# Procrustes Superimposition \n\nProcrustes superimposition is the most widely used method to create size and shape variables from landmark data. The basic idea is that larger objects should have landmarks that are farther apart. \n\n### Centroid\n\nA key concept is the __centroid__, which the center point of all of the landmarks. It is easily calculated for each specimen by taking the average of all of the landmark coordinates along each axis. For k landmarks in two dimensions the coordinates of the centroid would be:\n\n$$\nC_{x} = \\frac{X_1+X_2+X_3+ ... + X_k}{k}\n$$\n$$\nC_{y} = \\frac{Y_1+Y_2+Y_3 ... + Y_k}{k}\n$$\n\n### Centroid size\n\nThe concept of __centroid size__ describes geometric size. It is calculated from the distances of each landmark from the centroid, but it is a geometric mean because it is caculated by taking the square-root of the sums of squared distances of each landmark from the centroid.  \n\n![The centroid of a triangle (with landmarks at the vertices) is the point in the center.](../../images/Triangle.Centroid.png)\n\n[Source: Wikipedia]\n\n### Shape Variables \n\nShape variables calculated from Procrustes superimposition mathematically separates scale (size) from shape by applying shape-preserving transformations to make the landmarks as similar as possible. \n\nIn order to compare differences in shape, we can normalize by size with the following transformations:\n\nA. __Scale__: Bring each set of landmarks to the same size by magnifing or reducing the distances of the landmarks around their centroid.  \nB. __Translate__: Shift the landmarks in the coordinate space to place the centroids at a common point. \nC. __Rotate__: Rotate the landmarks with an angular transformation to bring them into a common orientation. \n \n\nAt the end of Procrustes superimposition, the landmarks for the different specimens will be scaled to the same size and as close together as possible while preserving the differences in shape. \n\n![Procrustes superimposition. The figure shows the three transformation steps of an ordinary Procrustes fit for two configurations of landmarks. (a) Scaling of both configurations to the same size; (b) Transposition to the same position of the center of gravity; (c) Rotation to the orientation that provides the minimum sum of squared distances between corresponding landmarks.](../../images/Procrustes_superimposition.png)\n\n[Source: Christian Klingenberg](https://commons.wikimedia.org/wiki/File:Procrustes_superimposition.png)\n\n# More software \n\n<https://academic.oup.com/view-large/223239151>\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}